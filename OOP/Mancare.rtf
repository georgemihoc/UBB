{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red173\green169\blue32;\red32\green32\blue32;\red88\green118\blue71;
\red125\green122\blue29;\red191\green100\blue38;\red166\green165\blue220;\red109\green109\blue109;}
{\*\expandedcolortbl;;\csgenericrgb\c67843\c66275\c12549;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c34510\c46275\c27843;
\csgenericrgb\c49020\c47843\c11373;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c65098\c64706\c86275;\csgenericrgb\c42745\c42745\c42745;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include \cf4 <iostream>\
\cf2 #define \cf5 _CRTDBG_MAP_ALLOC\
\cf2 #include \cf4 <stdlib.h>\
\cf2 #include \cf4 <vector>\
\cf2 #include \cf4 <string>\

\f1\b \cf6 using namespace 
\f0\b0 \cf7 std\cf6 ;\
\cf8 /*\
class Mancare\{\
private:\
    int pret;\
public:\
    Mancare(int pret):pret\{pret\}\{\};\
    virtual string descriere()=0;\
    virtual int getPret()\{\
        return pret;\
    \}\
    virtual ~Mancare()=default;\
\};\
class Burger:public Mancare\{\
private:\
    string& nume;\
public:\
    Burger(string& nume,int pret):nume\{nume\},Mancare(pret)\{\};\
    //Burger(string& nume):nume\{nume\}=default;\
    virtual string descriere() override \{\
        return nume;\
    \}\
    ~Burger()override\{\};\
\
\
\};\
class cuCartof:public Mancare\{\
private:\
    Mancare& m;\
public:\
    cuCartof(Mancare& m):m\{m\},Mancare(3)\{\};\
    virtual string descriere()override\{\
        return m.descriere()+" cu cartofi ";\
    \}\
    virtual int getPret()override\{\
        return m.getPret()+3;\
    \}\
\};\
class cuSos:public Mancare\{\
private:\
    Mancare& m;\
public:\
    cuSos(Mancare& m):m\{m\},Mancare(2)\{\};\
    virtual string descriere()override\{\
        return m.descriere()+" cu sos";\
    \}\
    virtual int getPret()override\{\
        return m.getPret()+2;\
    \}\
\
\};\
\
int main() \{\
    int pret=5;\
    string nume="BigMac";\
    auto b1=Burger(nume,pret);\
    cuCartof c1(b1);\
    //nume=c1.descriere();\
    cuSos s1(c1);\
    //nume=s1.descriere();\
    cout<<s1.descriere();\
    cout<<s1.getPret();\
    return 0;\
\}*/\
}