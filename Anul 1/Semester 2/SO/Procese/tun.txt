
---PROBLEMA 1----
Scrieti un program C care creaza doua procese folosind funcria fork.
Primul proces creat citeste un sir de caractere avand lungimea maxina 
de 100 de caractere, dupa care il trimite prin pipe celuilalt proces creat. 
Al douile proces va afisa pe ecran numarul de litere mari, litere mici, 
cifre din sirul de caractere primit prin pipe.

#include<stdlib.h>
#include<stdio.h>
#include<unistd.h>
#include<sys/wait.h>
#include<sys/types.h>
#include<string.h>

int main(int argc,char* argv[]) {
        int p[2];
        char s[100];
        gets(s);
        int i;

        pipe(p);
        if(fork()==0) {
                int nrn=0,nrmici=0,nrmari=0;
                close(p[0]);
                for(i = 0;i < strlen(s); i++) {
                        if(s[i] >= '0' && s[i] <= '9')
                                nrn+=1;
                        if(s[i] >= 'a' && s[i] <= 'z')
                                nrmici+=1;
                        if(s[i] >= 'A' && s[i] <= 'Z')
                                nrmari+=1;
                }
                write(p[1],&nrn,sizeof(int));
                write(p[1],&nrmici,sizeof(int));
                write(p[1],&nrmari,sizeof(int));
                close(p[1]);
                exit(0);
        }
        int a,b,c;
        wait(0);
        read(p[0],&a,sizeof(int));
        read(p[0],&b,sizeof(int));
        read(p[0],&c,sizeof(int));
        printf("Numere: %d, Mici: %d, Mari: %d \n",a,b,c);


        return 0;
}


---PROBLEMA 2---
Scrieti un program C care creaza 3 procese folosind functia fork. Primul
proces creat citeste de la tastatura un numar intreg pozitiv n si il va
trimite prin pipe pe rand celorlalte doua procese. Al doile proces creat va
afisa pe ecran toti divizorii numarului primit prin pipe. Al treilea proces
va citi de la tastatura n/3 numere intregi, dupa care le va trimite prin
pipe procesului parinte, procesul parinte va afisa pe ecran media aritmetica
a numerelor primite prin pipe.

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/wait.h>
#include<sys/types.h>

int main(int argc,char* argv[]) {
        int c1[2],c2[2],p[2];
        pipe(c1);
        pipe(c2);
        pipe(p);
        int n;
        if(fork() == 0) {
                close(c1[0]);
                close(c2[0]);
                scanf("%d",&n);
                write(c1[1],&n,sizeof(int));
                write(c2[1],&n,sizeof(int));
                exit(0);
        }
        if(fork() == 0) {
                close(c1[1]);
                read(c1[0],&n,sizeof(int));
                printf("Divizorii lui n sunt: ");
                for(int d = 1; d <=n; ++d)
                        if(n % d == 0)
                                printf("%d ",d);
                printf("\n");
                exit(0);
        }
        if(fork() == 0) {
                int v[10];
                close(c2[1]);
                close(p[0]);
                read(c2[0],&n,sizeof(int));
                write(p[1],&n,sizeof(int));
                for(int i = 1; i <= n/3; ++i)
                        scanf("%d",&v[i]);
                for(int i = 1; i <= n/3; ++i)
                                write(p[1],&v[i],sizeof(int));
                exit(0);
        }
        int s = 0,nr;
        read(p[0],&n,sizeof(int));
        for(int i = 1;i <= n/3; ++i) {
                read(p[0],&nr,sizeof(int));
                s += nr;
        }
        s = s / (n/3);
        printf("Media aritmetica: %d\n",s);

        wait(0);
        wait(0);
        wait(0);
        return 0;
}


---PROBLEMA 3----
Scrieti doua programe C. Primul program citeste de la tastatura un sir de
caractere avand lungime maxima de 100 de caractere, dupa care il va scrite
intr-un fifo. Al doule program va citi sirul de caractere din fifo si va
afisa pe ecran numarul de litere mari, litere mici, cifre din sirul de 
caractere respectiv.

prima parte


#include<stdlib.h>
#include<stdio.h>
#include<unistd.h>
#include<sys/wait.h>
#include<string.h>
#include<fcntl.h>
#include<sys/types.h>
#include<sys/stat.h>

int main(int argc, char* argv[]){

	int fd;
	char* myfifo="/tmp/myfifo";

	mkfifo(myfifo, 0666);

	fd=open(myfifo, O_WRONLY);

	char string[101];

	fgets(string,100,stdin);

	write(fd,string,sizeof(string));

	unlink(myfifo);

	return 0;
}

programul 2----------------

#include<unistd.h>
#include<sys/types.h>
#include<stdio.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<string.h>
int main(int argc, char* argv[]){
        int fd;
        char* myfifo="/tmp/myfifo";
        char buf[256];
        int nrn=0,nrmici=0,nrmari=0;
        fd=open(myfifo, O_RDONLY);
        read(fd, buf, 256);
        for(int i=0;i<strlen(buf);i++){
                if(buf[i]>='0' && buf[i]<='9')nrn++;
                if(buf[i]>='a' && buf[i]<='z')nrmici++;
                if(buf[i]>='A' && buf[i]<='Z')nrmari++;
        }
        printf("numere: %d, mari: %d, mici: %d",nrn,nrmari,nrmici);
        close(fd);
        return 0;
}

--------prb 4
citeste un nr si fiul sau afiseaza dublul numarului
#include<unistd.h>
#include<sys/types.h>
#include <sys/wait.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(){
	int p[2];
	pipe(p);
	
	int n;
	printf("Numar: ");
	scanf("%d", &n);	
	if(fork()==0){
		close(p[0]);
		n*=2;
		write(p[1], &n , sizeof(int));
		exit(0);
	}
	else
		printf("TUn");	
	wait(NULL);
	read(p[0], &n , sizeof(int));
	printf("%d\n", n);
	return 0;
}







