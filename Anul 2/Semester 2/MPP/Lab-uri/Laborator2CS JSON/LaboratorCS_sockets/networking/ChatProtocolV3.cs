// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: my.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chat.Protocol {

  /// <summary>Holder for reflection information generated from my.proto</summary>
  public static partial class MyReflection {

    #region Descriptor
    /// <summary>File descriptor for my.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghteS5wcm90bxINY2hhdC5wcm90b2NvbCIdCgdNZXNzYWdlEhIKCkpTb25T",
            "dHJpbmcYASABKAki5AEKC0NoYXRSZXF1ZXN0Ei0KBHR5cGUYASABKA4yHy5j",
            "aGF0LnByb3RvY29sLkNoYXRSZXF1ZXN0LlR5cGUSKQoHTWVzc2FnZRgCIAEo",
            "CzIWLmNoYXQucHJvdG9jb2wuTWVzc2FnZUgAInAKBFR5cGUSCgoGVW5rb3du",
            "EAASCQoFTG9naW4QARIKCgZMb2dvdXQQAhIQCgxBZGRJbnNjcmllcmUQAxIM",
            "CghHZXRQcm9iZRAEEhMKD0dldFBhcnRpY2lwYW50aRAFEhAKDEdldEluc2Ny",
            "aWVyaRAGQgkKB3BheWxvYWQilwIKDENoYXRSZXNwb25zZRIuCgR0eXBlGAEg",
            "ASgOMiAuY2hhdC5wcm90b2NvbC5DaGF0UmVzcG9uc2UuVHlwZRINCgVlcnJv",
            "chgCIAEoCRInCgdtZXNzYWdlGAMgAygLMhYuY2hhdC5wcm90b2NvbC5NZXNz",
            "YWdlEioKCm1lc3NhZ2VBZGQYBCABKAsyFi5jaGF0LnByb3RvY29sLk1lc3Nh",
            "Z2UicwoEVHlwZRILCgdVbmtub3duEAASBgoCT2sQARIJCgVFcnJvchACEgwK",
            "CEdldFByb2JlEAMSEwoPR2V0UGFydGljaXBhbnRpEAQSEAoMR2V0SW5zY3Jp",
            "ZXJpEAUSFgoSUGFydGljaXBhbnRJbnNjcmlzEAZCHAoLcnBjcHJvdG9jb2xC",
            "DUNoYXRQcm90b2J1ZnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.Message), global::Chat.Protocol.Message.Parser, new[]{ "JSonString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.ChatRequest), global::Chat.Protocol.ChatRequest.Parser, new[]{ "Type", "Message" }, new[]{ "Payload" }, new[]{ typeof(global::Chat.Protocol.ChatRequest.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.ChatResponse), global::Chat.Protocol.ChatResponse.Parser, new[]{ "Type", "Error", "Message", "MessageAdd" }, null, new[]{ typeof(global::Chat.Protocol.ChatResponse.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///message User{
  ///     string id=1;
  ///     string passwd=2;
  ///}
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.MyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      jSonString_ = other.jSonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "JSonString" field.</summary>
    public const int JSonStringFieldNumber = 1;
    private string jSonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JSonString {
      get { return jSonString_; }
      set {
        jSonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JSonString != other.JSonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JSonString.Length != 0) hash ^= JSonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JSonString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JSonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JSonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JSonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.JSonString.Length != 0) {
        JSonString = other.JSonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JSonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRequest : pb::IMessage<ChatRequest> {
    private static readonly pb::MessageParser<ChatRequest> _parser = new pb::MessageParser<ChatRequest>(() => new ChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.MyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest(ChatRequest other) : this() {
      type_ = other.type_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Message:
          Message = other.Message.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest Clone() {
      return new ChatRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chat.Protocol.ChatRequest.Types.Type type_ = 0;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.ChatRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Message Message {
      get { return payloadCase_ == PayloadOneofCase.Message ? (global::Chat.Protocol.Message) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Message;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Message = 2,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Message) hash ^= Message.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Message) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Message:
          if (Message == null) {
            Message = new global::Chat.Protocol.Message();
          }
          Message.MergeFrom(other.Message);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Chat.Protocol.ChatRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Chat.Protocol.Message subBuilder = new global::Chat.Protocol.Message();
            if (payloadCase_ == PayloadOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChatRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("AddInscriere")] AddInscriere = 3,
        [pbr::OriginalName("GetProbe")] GetProbe = 4,
        [pbr::OriginalName("GetParticipanti")] GetParticipanti = 5,
        [pbr::OriginalName("GetInscrieri")] GetInscrieri = 6,
      }

    }
    #endregion

  }

  public sealed partial class ChatResponse : pb::IMessage<ChatResponse> {
    private static readonly pb::MessageParser<ChatResponse> _parser = new pb::MessageParser<ChatResponse>(() => new ChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.MyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse(ChatResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      message_ = other.message_.Clone();
      messageAdd_ = other.messageAdd_ != null ? other.messageAdd_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse Clone() {
      return new ChatResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chat.Protocol.ChatResponse.Types.Type type_ = 0;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.ChatResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Chat.Protocol.Message> _repeated_message_codec
        = pb::FieldCodec.ForMessage(26, global::Chat.Protocol.Message.Parser);
    private readonly pbc::RepeatedField<global::Chat.Protocol.Message> message_ = new pbc::RepeatedField<global::Chat.Protocol.Message>();
    /// <summary>
    ///      repeated User friends=3;
    ///      User user=4 ;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.Protocol.Message> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "messageAdd" field.</summary>
    public const int MessageAddFieldNumber = 4;
    private global::Chat.Protocol.Message messageAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Message MessageAdd {
      get { return messageAdd_; }
      set {
        messageAdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!message_.Equals(other.message_)) return false;
      if (!object.Equals(MessageAdd, other.MessageAdd)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= message_.GetHashCode();
      if (messageAdd_ != null) hash ^= MessageAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      message_.WriteTo(output, _repeated_message_codec);
      if (messageAdd_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += message_.CalculateSize(_repeated_message_codec);
      if (messageAdd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageAdd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      message_.Add(other.message_);
      if (other.messageAdd_ != null) {
        if (messageAdd_ == null) {
          messageAdd_ = new global::Chat.Protocol.Message();
        }
        MessageAdd.MergeFrom(other.MessageAdd);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Chat.Protocol.ChatResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 34: {
            if (messageAdd_ == null) {
              messageAdd_ = new global::Chat.Protocol.Message();
            }
            input.ReadMessage(messageAdd_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChatResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("Error")] Error = 2,
        [pbr::OriginalName("GetProbe")] GetProbe = 3,
        [pbr::OriginalName("GetParticipanti")] GetParticipanti = 4,
        [pbr::OriginalName("GetInscrieri")] GetInscrieri = 5,
        [pbr::OriginalName("ParticipantInscris")] ParticipantInscris = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
